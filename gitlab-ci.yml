# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

variables:
  DOCKER_HOST: "tcp://docker:2375/"

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u $USERNAME -p $PASSWORD
    - docker build --no-cache -t fightclub:latest .
    - docker image tag fightclub:latest avj17/fightclub:latest
    - docker push avj17/fightclub:latest

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 10 seconds."
    - sleep 10
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  image: avj17/k8s-helm-gcp-base-image:latest
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  services:
    - docker:dind
  script:
    - docker system prune -a
    - docker pull avj17/fightclub:latest
    - gcloud auth login --cred-file=keys/angular-expanse-404606-cbae3afcf6e3.json
    - gcloud config set project angular-expanse-404606
    - gcloud container clusters get-credentials fight-club-cluster --region=northamerica-northeast2
    - docker pull avj17/fightclub:latest
    - helm upgrade django-app -f helm/django-app-chart/values.yaml helm/django-app-chart
    - kubectl get all
